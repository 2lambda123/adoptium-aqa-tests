<?xml version="1.0" encoding="UTF-8"?>
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../TestConfig/playlist.xsd">
	
	<test>
		<testCaseName>ClassLoadingTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=ClassloadingLoadTest; \
	$(TEST_STATUS)</command> 
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>ConcurrentLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=ConcurrentLoadTest; \
	$(TEST_STATUS)</command> 
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>DirectByteBufferLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=DirectByteBufferLoadTest; \
	$(TEST_STATUS)</command> 
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>LangLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=LangLoadTest; \
	$(TEST_STATUS)</command> 
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>LockingLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=LockingLoadTest; \
	$(TEST_STATUS)</command> 
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>MathLoadTest_all</testCaseName>
		<variations>
			<variation>NoOptions</variation> 
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=MathLoadTest; \
	$(TEST_STATUS)</command> 
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>MathLoadTest_autosimd</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=MathLoadTest \
	-test-args=$(Q)workload=autoSimd$(Q) ; \ 
	$(TEST_STATUS)</command> 
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>MathLoadTest_bigdecimal</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=MathLoadTest \
	-test-args=$(Q)workload=bigdecimal$(Q) ; \ 
	$(TEST_STATUS)</command> 
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>MauveSingleThreadLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=MauveSingleThreadLoadTest; \
	$(TEST_STATUS)</command> 
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>MauveSingleInvocationLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=MauveSingleInvocationLoadTest; \
	$(TEST_STATUS)</command>	
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>MauveMultiThreadLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=MauveMultiThreadLoadTest; \
	$(TEST_STATUS)</command>	
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>NioLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=NioLoadTest; \
	$(TEST_STATUS)</command>	
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>UtilLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=UtilLoadTest; \
	$(TEST_STATUS)</command>	
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>LambdaLoadTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=LambdaLoadTest; \
	$(TEST_STATUS)</command>	
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>JdiTest</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=JdiTest; \
	$(TEST_STATUS)</command>	
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>HCRLateAttachWorkload</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)stf;$(TEST_RESROOT)$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(TEST_RESROOT)$(D)systemtest_prereqs$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=HCRLateAttachWorkload; \
	$(TEST_STATUS)</command>	
		<tags>
			<tag>system</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
</playlist>
