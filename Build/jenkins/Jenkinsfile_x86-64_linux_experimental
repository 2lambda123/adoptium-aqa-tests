#!groovy
pipeline {
    agent {label 'test-scaleway-x64-ubuntu-16.04-1'}
    environment {
                JAVA_BIN="$WORKSPACE/openjdkbinary/j2sdk-image/jre/bin"
                JCL_VERSION='current'
                OPENJDK_TEST="$WORKSPACE/openjdk-test"
                JAVA_VERSION='SE80'
                SPEC='linux_x86-64'
                JVM_TEST_ROOT="$WORKSPACE/jvmtest"
                SRC_ROOT="$WORKSPACE/openjdk-test"
                }
    stages {
        stage('Setup') {
            steps {
				timestamps{
					sh 'printenv'
            		sh 'chmod 755 $OPENJDK_TEST/maketest.sh'
                	sh 'chmod 755 $OPENJDK_TEST/get.sh'
                	script {
                		if (fileExists('openjdkbinary')) {
                			dir('openjdkbinary') {
                				deleteDir()
                			}
                		}
                		if (fileExists('jvmtest')) {
                			dir('jvmtest') {
                				deleteDir()
                			}
                		}
                	}
                	sh '$OPENJDK_TEST/get.sh $WORKSPACE $OPENJDK_TEST x64_linux'
				}
			}
		}
        stage('Build') {
            steps {
				timestamps{
                	echo 'Building tests...'
                	sh '$OPENJDK_TEST/maketest.sh $OPENJDK_TEST'
					echo "Stash jdk, test"
            		dir ('./') {
            			sh '''
            				zip -r jdk_test.zip *
						'''
                   	 	stash includes: 'jdk_test.zip', name: 'jdk_test_zip'
            		}
				}
			}
		}
        stage('Test') {
            steps {
				script {
	            	parallel "extended" : {
	            		node ('test-scaleway-x64-ubuntu-16.04-1'){
	            			timestamps {
	            			   	unstash 'jdk_test_zip'
	            				sh '''
	            					unzip jdk_test.zip
                       				currentDir=`pwd`
                       				currentTestDir=$currentDir/openjdk-test
                       				chmod 755 $currentTestDir/maketest.sh
	            			   		mkdir extended
									cd extended
									$currentTestDir/maketest.sh $currentDir extended parallel
								'''
								archiveArtifacts artifacts: '**/*.tap', fingerprint: true
								junit allowEmptyResults: true, keepLongStdio: true, testResults: '**/work/**/*.xml, **/junitreports/**/*.xml'
								archiveArtifacts artifacts: '**/work/**/*.xml, **/junitreports/**/*.xml', fingerprint: true
                				dir('extended') {
                					deleteDir()
                  				}
	            			}
	            		}
	            	},
	            	"sanity" : {
	            		node ('test-packet-x64-ubuntu-16.04-1') {
	            			timestamps {
								unstash 'jdk_test_zip'
                       			sh '''
                       				unzip jdk_test.zip
	            					currentDir=`pwd`
                       				currentTestDir=$currentDir/openjdk-test
                       				chmod 755 $currentTestDir/maketest.sh
	            		    		mkdir sanity
									cd sanity
									$currentTestDir/maketest.sh $currentDir sanity parallel
								'''
								archiveArtifacts artifacts: '**/*.tap', fingerprint: true
								junit allowEmptyResults: true, keepLongStdio: true, testResults: '**/work/**/*.xml, **/junitreports/**/*.xml'
								archiveArtifacts artifacts: '**/work/**/*.xml, **/junitreports/**/*.xml', fingerprint: true 
                				dir('sanity') {
                					deleteDir()
                  				}
                  			}
	            		}
	            	}
				}
            }
        }
    }
	post {
		always {
			deleteDir()
		}
	}
}
