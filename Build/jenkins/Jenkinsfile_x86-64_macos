#!groovy
pipeline {
    agent {label 'mac&&x64&&test'}
    environment {
                JAVA_BIN="$WORKSPACE/openjdkbinary/j2sdk-image/jre/bin"
                JCL_VERSION='current'
                OPENJDK_TEST="$WORKSPACE/openjdk-test"
                JAVA_VERSION='SE80'
                SPEC='mac_os'
                }
    stages {
        stage('Setup') {
            steps {
				timestamps{
					sh 'printenv'
            		sh 'chmod 755 $OPENJDK_TEST/maketest.sh'
                	sh 'chmod 755 $OPENJDK_TEST/get.sh'
                	script {
                		if (fileExists('openjdkbinary')) {
                			dir('openjdkbinary') {
                				deleteDir()
                			}
                		}
                		if (fileExists('jvmtest')) {
                			dir('jvmtest') {
                				deleteDir()
                			}
                		}
                	}
                	sh '$OPENJDK_TEST/get.sh $WORKSPACE $OPENJDK_TEST x64_mac'
					}
                }
        }
        stage('Build') {
            steps {
				timestamps{
                	echo 'Building tests...'
                	sh '$OPENJDK_TEST/maketest.sh $OPENJDK_TEST'
					}
            }
        }
        stage('Test') {
            steps {
				timestamps{
                	echo 'Running tests...'
                	sh "$OPENJDK_TEST/maketest.sh $OPENJDK_TEST runtest"
					}
            }
        }
    }
    post {
    	always {
 			step([$class: "TapPublisher", testResults: "**/*.tap"])
            archiveArtifacts artifacts: '**/*.tap', fingerprint: true
            junit allowEmptyResults: true, keepLongStdio: true, testResults: '**/work/**/*.xml, **/junitreports/**/*.xml'
            archiveArtifacts artifacts: '**/work/**/*.xml, **/junitreports/**/*.xml', fingerprint: true 
 		}
 	}
    
}
