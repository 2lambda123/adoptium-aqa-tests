#!groovy
pipeline {
    agent {label "${params.MACHINE_LABEL}&&x64&&test"}
    parameters {
		choice (choices: 'x64_linux\nx64_mac\ns390x_linux\nppc64le_linux\naarch64_linux', description: 'PLATFORM?', name: 'PLATFORM')
		choice (choices: 'SE90\nSE80', description: 'What is JAVA_VERSION?', name: 'JAVA_VERSION')
		choice (choices: 'openjdk9-openj9\nopenjdk9\nopenjdk8', description: 'What is JVM Version?', name: 'JVM_VERSION')
		choice (choices: 'openjdk\nsanity\nextended\nruntest', description: 'What is test level?', name: 'TARGET')
		choice (choices: 'linux\nmac', description: 'What is machine label?', name: 'MACHINE_LABEL')
		}
	environment {
                JCL_VERSION='current'
                OPENJDK_TEST="$WORKSPACE/openjdk-test"
                SPEC='linux_x86-64'
                }
    stages {
        stage('Setup') {
            steps {
				timestamps{
					sh 'printenv'
            		sh 'chmod 755 $OPENJDK_TEST/maketest.sh'
                	sh 'chmod 755 $OPENJDK_TEST/get.sh'
                	script {
                		if (fileExists('openjdkbinary')) {
                			dir('openjdkbinary') {
                				deleteDir()
                			}
                		}
                		if (fileExists('jvmtest')) {
                			dir('jvmtest') {
                				deleteDir()
                			}
                		}
                	}
                	sh "$OPENJDK_TEST/get.sh $WORKSPACE $OPENJDK_TEST ${params.PLATFORM} ${params.JVM_VERSION}"
					}
                }
        }
        stage('Build') {
            steps {
				timestamps{
                	echo 'Building tests...'
                	withEnv(["JAVA_BIN=$WORKSPACE/openjdkbinary/j2sdk-image/${(params.JAVA_VERSION == 'SE80') ? 'jre/' : ''}bin",
                	"JAVA_VERSION=${params.JAVA_VERSION}"]) {
                		sh '$OPENJDK_TEST/maketest.sh $OPENJDK_TEST'
					}
                }
            }
        }
        stage('Test') {
            steps {
				timestamps{
                	echo 'Running tests...'
                	withEnv(["JAVA_BIN=$WORKSPACE/openjdkbinary/j2sdk-image/${(params.JAVA_VERSION == 'SE80') ? 'jre/' : ''}bin",
                	"JAVA_VERSION=${params.JAVA_VERSION}"]) {
                		sh "$OPENJDK_TEST/maketest.sh $OPENJDK_TEST ${params.TARGET}"
					}
				}
            }
        }
    }
    post {
    	always {
 			step([$class: "TapPublisher", testResults: "**/*.tap"])
            archiveArtifacts artifacts: '**/*.tap', fingerprint: true
            junit allowEmptyResults: true, keepLongStdio: true, testResults: '**/work/**/*.xml, **/junitreports/**/*.xml'
            archiveArtifacts artifacts: '**/work/**/*.xml, **/junitreports/**/*.xml', fingerprint: true 
 		}
 	}
    
}
