<?xml version="1.0" encoding="UTF-8"?>
<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../TestConfig/playlist.xsd">

	<test>
		<testCaseName>jck-runtime-custom</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-java-args-setup=$(JCK_JAVA_ARGS) \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=$(JCK_TEST_TARGET),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-compiler-custom</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-java-args-setup=$(JCK_JAVA_ARGS) \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=$(JCK_TEST_TARGET),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-devtools-custom</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-java-args-setup=$(JCK_JAVA_ARGS) \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=$(JCK_TEST_TARGET),jckversion=$(JCK_VERSION),testsuite=DEVTOOLS$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>

	<test>
		<testCaseName>jck-runtime-api-java_math</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_math,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-instrument</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_lang/instrument,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>

	<test>
		<testCaseName>jck-runtime-api-java_lang-invoke</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_lang/invoke,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-reflect</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_lang/reflect,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-Package</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_lang/Package,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-String</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_lang/String,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-StringBuilder</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_lang/StringBuilder,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-StringBuffer</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_lang/StringBuffer,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-ClassLoader</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_lang/ClassLoader,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-constantpool</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=vm/constantpool,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-jvmti</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=vm/jvmti,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-overview</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=vm/overview,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-classfmt-clf</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=vm/classfmt/clf,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE80</subset>
			<subset>SE90</subset>
		</subsets>
	</test>
	
	<test>
		<testCaseName>jck-runtime-api-java_lang-ModuleLayer</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_lang/ModuleLayer,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-module</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_lang/module,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-api-java_lang-StackWalker</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/java_lang/StackWalker,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-api-modulegraph</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=api/modulegraph,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-module</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=vm/module,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE90</subset>
		</subsets>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-verifier</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>export JAVA_HOME=$(JDK_HOME)$(D)  && \
	perl $(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)$(JAVA_VERSION)$(D)stf$(D)stf.core$(D)scripts$(D)stf.pl  \
	-test-root=$(Q)$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)stf;$(TEST_RESROOT)$(D)..$(D)..$(D)systemtest$(D)${JAVA_VERSION}$(D)openjdk-systemtest$(Q) \
	-systemtest-prereqs=$(Q)$(JCK_ROOT)$(Q)  \
	-results-root=$(REPORTDIR)  \
	-test=Jck -test-args=$(Q)tests=vm/verifier,jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<tags>
			<tag>jck</tag>
			<tag>daily</tag>
		</tags>
		<subsets>
			<subset>SE90</subset>
		</subsets>
	</test>

</playlist>
