<?xml version="1.0"?>

<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->

<project name="jck" default="build" basedir=".">
	<taskdef resource="net/sf/antcontrib/antlib.xml" />
	<description>Build STF based JCK Tests </description>

	<!-- set global properties for this build -->
	<property name="SYSTEMTEST_ROOT" value="${basedir}/../systemtest" />
	<property name="DEST" value="${BUILD_ROOT}/jck" />
	<property name="SYSTEMTEST_BUILD_ROOT" value="${BUILD_ROOT}/systemtest" />
	<property environment="env" />

	<target name="init">
		<mkdir dir="${DEST}" />
		<if>
			<not>
				<available file="${SYSTEMTEST_BUILD_ROOT}" type="dir" />
			</not>
			<then>
				<mkdir dir="${SYSTEMTEST_BUILD_ROOT}" />
			</then>
		</if>
	</target>

	<target name="clone_stf">
		<exec executable="git" failonerror="false">
			<arg value="clone" />
			<arg value="--depth" />
			<arg value="1" />
			<arg value="--single-branch" />
			<arg value="https://github.com/AdoptOpenJDK/stf.git" />
			<arg value="${SYSTEMTEST_ROOT}/stf" />
		</exec>
	</target>

	<target name="clone_systemtest">
		<exec executable="git" failonerror="false">
			<arg value="clone" />
			<arg value="--depth" />
			<arg value="1" />
			<arg value="--single-branch" />
			<arg value="https://github.com/AdoptOpenJDK/openjdk-systemtest.git" />
			<arg value="${SYSTEMTEST_ROOT}/openjdk-systemtest" />
		</exec>
	</target>

	<target name="check_systemtest" depends="init">
		<if>
			<not>
				<available file="${SYSTEMTEST_ROOT}/stf" type="dir" />
			</not>
			<then>
				<echo message="${SYSTEMTEST_ROOT}/stf does not exist, clone from GitHub" />
				<antcall target="clone_stf" inheritall="true" />
			</then>
			<else>
				<echo message="${SYSTEMTEST_ROOT}/stf exists, skip cloning" />
			</else>
		</if>
		<if>
			<not>
				<available file="${SYSTEMTEST_ROOT}/openjdk-systemtest" type="dir" />
			</not>
			<then>
				<echo message="${SYSTEMTEST_ROOT}/openjdk-systemtest does not exist, clone from GitHub" />
				<antcall target="clone_systemtest" inheritall="true" />
			</then>
			<else>
				<echo message="${SYSTEMTEST_ROOT}/openjdk-systemtest exists, skip cloning" />
			</else>
		</if>
	</target>

	<target name="configure_stf" depends="check_systemtest">
		<ant antfile="${SYSTEMTEST_ROOT}/stf/stf.build/build.xml" dir="${SYSTEMTEST_ROOT}/stf/stf.build/" target="configure" inheritAll="false" >
			<property name="java.home" value="${JAVA_BIN}/.."/>
		</ant>
		<ant antfile="${SYSTEMTEST_ROOT}/openjdk-systemtest/openjdk.build/build.xml" dir="${SYSTEMTEST_ROOT}/openjdk-systemtest/openjdk.build/" target="configure" inheritAll="false" >
			<property name="java.home" value="${JAVA_BIN}/.."/>
		</ant>
	</target>

	<target name="compile_stf" depends="configure_stf">
		<ant antfile="${SYSTEMTEST_ROOT}/openjdk-systemtest/openjdk.build/build.xml" dir="${SYSTEMTEST_ROOT}/openjdk-systemtest/openjdk.build" inheritAll="false" >
			<property name="java.home" value="${JAVA_BIN}/.."/>
		</ant>
	</target>

	<target name="dist" depends="compile_stf" description="generate the distribution">
		<if>
			<not>
				<available file="${SYSTEMTEST_BUILD_ROOT}/openjdk-systemtest" type="dir" />
			</not>
			<then>
				<copy todir="${SYSTEMTEST_BUILD_ROOT}/stf">
					<fileset dir="${SYSTEMTEST_ROOT}/stf" includes="**" />
				</copy>
				<copy todir="${SYSTEMTEST_BUILD_ROOT}/openjdk-systemtest">
					<fileset dir="${SYSTEMTEST_ROOT}/openjdk-systemtest" includes="**" />
				</copy>
				<copy todir="${SYSTEMTEST_BUILD_ROOT}/systemtest_prereqs/">
					<fileset dir="${basedir}/../systemtest_prereqs/" includes="**" />
				</copy>
			</then>
		</if>
		<copy todir="${DEST}">
			<fileset dir="${basedir}">
				<exclude name="jck_root/"/>
				<exclude name="README.md"/>
			</fileset>
		</copy>
		<copy todir="${JCK_ROOT}/">
			<fileset dir="${basedir}/../systemtest_prereqs/" includes="**" />
		</copy>
	</target>

	<target name="build">
		<echo>JCK_ROOT is set to: ${JCK_ROOT}</echo>
		<if>
			<isset property="JCK_ROOT" />
			<then>
				<if>
					<not>
						<equals arg1="${JCK_ROOT}" arg2="" />
					</not>
					<then>
						<echo>=== JCK_ROOT is set to ${JCK_ROOT} ===</echo>
						<echo>start building jck project</echo>
						<antcall target="dist" inheritall="true" />
					</then>
				</if>
			</then>
			<else>
				<echo message="JCK_ROOT is not set, skip building jck" />
			</else>
		</if>
	</target>

	<target name="clean">
		<ant antfile="${SYSTEMTEST_ROOT}/openjdk-systemtest/openjdk.build/build.xml" dir="${SYSTEMTEST_ROOT}/openjdk-systemtest/openjdk.build" inheritAll="false" target="clean" >
			<property name="java.home" value="${JAVA_BIN}/.."/>
		</ant>
		<ant antfile="${SYSTEMTEST_ROOT}/stf/stf.build/build.xml" dir="${SYSTEMTEST_ROOT}/stf/stf.build" inheritAll="false" target="clean" >
			<property name="java.home" value="${JAVA_BIN}/.."/>
		</ant>
	</target>
</project>
