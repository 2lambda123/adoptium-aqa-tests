name: Upload Issue Attachments

on:
  issues:
    types: [closed]

jobs:
  upload_attachments:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Download Issue Attachments and Create JAR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          #!/usr/bin/env python3
          import os
          import requests
          from github import Github
          import zipfile
          import tempfile

          # GitHub authentication
          github_token = os.getenv('GITHUB_TOKEN')
          g = Github(github_token)
          repo = g.get_repo(os.getenv('GITHUB_REPOSITORY'))
          issue_number = os.getenv('GITHUB_EVENT_ISSUE_NUMBER')
          issue = repo.get_issue(int(issue_number))

          # Temporary directory for downloading attachments
          temp_dir = tempfile.mkdtemp()

          # Function to download a file from a URL
          def download_file(url, dest_path):
              response = requests.get(url)
              response.raise_for_status()
              with open(dest_path, 'wb') as f:
                  f.write(response.content)

          # Download attachments
          attachments = []
          for comment in issue.get_comments():
              if comment.body:
                  for line in comment.body.splitlines():
                      if line.startswith('![image](') and line.endswith(')'):
                          url = line[line.find('(')+1:-1]
                          filename = url.split('/')[-1]
                          file_path = os.path.join(temp_dir, filename)
                          download_file(url, file_path)
                          attachments.append(file_path)

          # Create JAR file
          jar_path = 'issue_attachments.jar'
          with zipfile.ZipFile(jar_path, 'w') as jar:
              for file_path in attachments:
                  jar.write(file_path, os.path.basename(file_path))

          print(f'Created JAR file: {jar_path}')

      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v2
        with:
          name: issue-attachments
          path: issue_attachments.jar


